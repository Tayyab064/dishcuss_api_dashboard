<style type="text/css">
  .pac-container {
      background-color: #FFF;
      z-index: 20;
      position: fixed;
      display: inline-block;
      float: left;
  }
  .modal{
      z-index: 20;   
  }
  .modal-backdrop{
      z-index: 10;        
  }â€‹
</style>

<section class="content-header">
  <h1>
    Restaurants
     <small style="float: right;"><button type="button" class="btn btn-info" data-toggle="modal" data-target="#add_restaurant">Add Restaurant</button></small>
  </h1>
  <!-- Modal -->
  <div class="modal fade" id="add_restaurant" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">Add Restaurant</h4>
        </div>
        <div class="modal-body">
          <%= form_tag(rest_admin_search_path , method: "post" , :multipart => true) do %>
            <div class="box-body">
              <div class="form-group">
                <%= label_tag 'name', 'Name'%>
                <%= text_field_tag :name , params[:name] , class: 'form-control', autofocus: true %>
              </div>
              <div class="form-group">
                <%= label_tag 'typee', 'Type'%>
                <%= select_tag 'typee', "<option>Restaurant</option><option>Cafe</option>".html_safe , class: 'form-control' , autofocus: true %>
              </div>
              <div class="form-group">
                <%= label_tag 'opening_time', 'Opening Time'%>
                <%= time_field :opening_time , params[:opening_time] , class: 'form-control', autofocus: true %>
              </div>
              <div class="form-group">
                <%= label_tag 'closing_time', 'Closing Time'%>
                <%= time_field :closing_time , params[:closing_time] , class: 'form-control', autofocus: true %>
              </div>
              <div class="form-group">
                <%= label_tag 'cost', 'Price Per Head'%>
                <%= number_field_tag :cost , params[:cost] , class: 'form-control', autofocus: true %>
              </div>
              <div class="form-group">
                <%= label_tag 'call_now', 'Phone Number'%>
                <%= text_field_tag :call_now , params[:call_now] , class: 'form-control', autofocus: true %>
              </div>
              
              <div class="form-group">
                <%= label_tag 'location', 'Location'%>
                <div id="map" class="form-group" style="height: 150px;"></div>
                <%= text_field_tag :location , params[:location] , class: 'form-control', autofocus: true %>
              </div>
              <div class="form-group">
                <%= label_tag 'cover_image', 'Cover Image'%>
                <%= file_field( "image", "image" ) %>
              </div>
            </div>
            <!-- /.box-body -->
                     
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            <%= submit_tag "Add" , class: 'btn btn-default' %>
          <% end %> 
        </div>
      </div>
      
    </div>
  </div>
</section>




<div class="row content">
  <div class="col-xs-12">
    <div class="box">
            <!-- <div class="box-header">
              <h3 class="box-title">Reviews</h3>
            </div> -->
            <!-- /.box-header -->
            <div class="box-body">
              <table id="example1" class="table table-bordered table-striped">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Opening Time</th>
                    <th>Closing Time</th>
                    <th>Location</th>
                    <th>Approved</th>
                    <th>Detail</th>
                  </tr>
                  </thead>
                  <tbody>
                    <% @restaurant.each do |rest| %>
                      <tr>
                        <td><%= rest.name %></td>
                        <td><%= rest.opening_time.strftime("%H:%M %p") %></td>
                        <td><%= rest.closing_time.strftime("%H:%M %p") %></td>
                        <td><%= rest.location %></td>
                        <td><%= rest.approved ? "Yes" : "No" %></td>
                        <td><%= link_to 'Details' , restauarant_owner_details_path(rest.id) %></td>
                      </tr>
                    <% end %>
                  </tbody>
              </table>
            </div>
            <!-- /.box-body -->
          </div>
          <!-- /.box -->
  </div>
</div>


<script>
    var markersArray = [];
    function clearOverlays() {
  for (var i = 0; i < markersArray.length; i++ ) {
    markersArray[i].setMap(null);
  }
  markersArray.length = 0;
}


      function initMap() {
        var input = document.getElementById('location');
        console.log("initilalizing map");
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat:   -40.900557, lng: 174.885971},
          zoom: 16


          
        });

      $(document).ready(function(){

        var marker1;

        var marker0;

      });

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            map.setCenter(pos);
          }, function() {
            //handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          //handleLocationError(false, infoWindow, map.getCenter());
        }
      

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
      }
        

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
          map: map
        });
        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            return;
          }

          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
          }

        });

      }
  function setMapOnAll(map) {
    for (var i = 0; i < marker1.length; i++) {
      marker1[i].setMap(map);
    }
  }

  // Removes the markers from the map, but keeps them in the array.
  function clearMarkers() {
    setMapOnAll(map);
  }


    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBoUyblkGqwp2lFuWQb0v_-J_mI5sYJYPc&libraries=places&callback=initMap"
        async defer></script>